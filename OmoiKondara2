#!/usr/bin/ruby19 -Ku
# -*- ruby-mode -*-
# $Id: OmoiKondara 11691 2006-10-12 14:28:36Z ryu $

$:.unshift(File.dirname($0))
if FileTest.symlink?($0) then
	$:.unshift(File.dirname($0) + "/v2")
end

require 'environment'
require 'getoptlong'
require 'timeout'

require 'utils'
require 'config'
require 'build'

if not $NOSTRICT then
  print "reading RPM database to see what is installed ..."
  STDOUT.flush
  begin
    rpmdb = RPM::DB.open
    rpmdb.each do |pkg|
      pkg.provides.each do |a|
        next if (a.flags & RPM::SENSE_RPMLIB).nonzero?
        $SYSTEM_PROVIDES.push(a.to_struct)
      end
    end # rpmdb.each do |pkg|
  ensure
    rpmdb = nil
    GC.start
  end
  puts " OK\n"
end # if not $NOSTRICT then

unless FileTest.exist?('/usr/lib/rpm/momonga/rpmrc') then
  print "Your momonga-rpmmacros is too old, and UPDATE 20090921-1m or later\n"
  STDOUT.flush
end

if ARGV.length == 0 then
  if $DEPEND_PACKAGE == "" then
    name_stack = Array.new
    blacklist = Array.new
    recursive_build("./", name_stack, blacklist)
  else
    $FORCE = true
    dep = `env LANG=C sudo rpm -e --test #{$DEPEND_PACKAGE} 2>&1`
    pkgs = dep.scan(/^.*needed by (?:\(installed\) )(.*)$/).flatten.sort.uniq.compact
    sp = Array.new
    pkgs.each do |pkg|
      if pkg !~ /^$/ then
        sp += [`rpm -q --queryformat "%{SOURCERPM}" #{pkg}`.split(/\-/)[0..-3].join('-')]
      end
    end
    name_stack = Array.new
    blacklist = Array.new
    buildme($DEPEND_PACKAGE, name_stack, blacklist)
    spkgs = sp.sort.uniq
    if $RANDOM_ORDER then
      spkgs = spkgs.sort_by{rand}
    end
    spkgs.each {|pkg| buildme(pkg, name_stack, blacklist)}
  end
else
  name_stack = Array.new
  blacklist = Array.new
  pkgs=ARGV
  if $RANDOM_ORDER then
    pkgs = pkgs.sort_by{rand}
  end
  pkgs.each do |av|
    av = av.chop if av =~ /^.+\/$/
    buildme(av, name_stack, blacklist)
  end
end

$DEPGRAPH.db.commit! if $DEPGRAPH

### Local Variables:
### mode: ruby
### indent-tabs-mode: nil
### End:
